--------------------------------------------------------------------------

This unbound code is a high core design its focus towards 6 cores with 12 threads design focus towards personal to small business use and only uses 128 MB of RAM and 1 core. If a user is going to use this code and they want to make a dedicated server, you can increase the dedicated values for a more powerful system:

- msg-buffer-size
- msg-cache-slabs
- msg-cache-size
- neg-cache-size
- num-threads
- rrset-cache-size
- rrset-cache-slabs
- infra-cache-slabs
- infra-cache-numhosts
- key-cache-size
- key-cache-slabs
- num-queries-per-thread
- max-udp-size
- so-rcvbuf
- so-sndbuf
- outgoing-num-tcp
- incoming-num-tcp
- tcp-mss
- outgoing-tcp-mss
- stream-wait-size
- ratelimit-slabs
- ip-ratelimit-slabs
- ratelimit-size
- edns-buffer-size

Copy the code below to use unbound.

--------------------------------------------------------------------------

server:
    # If no logfile is specified, syslog is used
    # logfile: "/var/log/unbound/unbound.log"
    verbosity: 0

    interface: 127.0.0.1
    port: 5335
    do-ip4: yes
    do-udp: yes
    do-tcp: yes

    # May be set to yes if you have IPv6 connectivity
    do-ip6: yes

    # You want to leave this to no unless you have *native* IPv6. With 6to4 and
    # Terredo tunnels your web browser should favor IPv4 for the same reasons
    prefer-ip4: yes

    # Use this only when you downloaded the list of primary root servers!
    # If you use the default dns-root-data package, unbound will find it automatically
    #root-hints: "/var/lib/unbound/root.hints"

    # Trust glue only if it is within the server's authority
    harden-glue: yes

    # Require DNSSEC data for trust-anchored zones, if such data is absent, the zone becomes>
    harden-dnssec-stripped: yes

    # Don't use Capitalization randomization as it known to cause DNSSEC issues sometimes
    # see https://discourse.pi-hole.net/t/unbound-stubby-or-dnscrypt-proxy/9378 for further >
    use-caps-for-id: no

    # Reduce EDNS reassembly buffer size.
    # IP fragmentation is unreliable on the Internet today, and can cause
    # transmission failures when large DNS messages are sent via UDP. Even
    # when fragmentation does work, it may not be secure; it is theoretically
    # possible to spoof parts of a fragmented DNS message, without easy
    # detection at the receiving end. Recently, there was an excellent study
    # >>> Defragmenting DNS - Determining the optimal maximum UDP response size for DNS <<<
    # by Axel Koolhaas, and Tjeerd Slokker (https://indico.dns-oarc.net/event/36/contributio>
    # in collaboration with NLnet Labs explored DNS using real world data from the
    # the RIPE Atlas probes and the researchers suggested different values for
    # IPv4 and IPv6 and in different scenarios. They advise that servers should
    # be configured to limit DNS messages sent over UDP to a size that will not
    # trigger fragmentation on typical network links. DNS servers can switch
    # from UDP to TCP when a DNS response is too big to fit in this limited
    # buffer size. This value has also been suggested in DNS Flag Day 2020.
    edns-buffer-size: 4950000000000000000

    # Perform prefetching of close to expired message cache entries
    # This only applies to domains that have been frequently queried
    prefetch: yes

    # One thread should be sufficient, can be increased on beefy machines. In reality for mo>
    num-threads: 6

    # Ensure kernel buffer is large enough to not lose messages in traffic spikes
    so-rcvbuf: 0m
    so-sndbuf: 0m

    # Ensure privacy of local IP ranges
    # private-address: 192.168.1.0/16
    # private-address: 169.254.0.0/16
    # private-address: 172.16.0.0/12
    # private-address: 10.0.0.0/8
    # private-address: fd00::/8




    # interface: <ip address[@port]>
    # Interface to use to connect to the network. This interface is
    # listened to for queries from clients, and answers to clients are
    # given from it. Can be given multiple times to work on several
    # interfaces. If none are given the default is to listen to local-
    # host. If an interface name is used instead of an ip address,
    # the list of ip addresses on that interface are used. The inter-
    # faces are not changed on a reload (kill -HUP) but only on
    # restart. A port number can be specified with @port (without
    # spaces between interface and port number), if not specified  the
    # default port (from port) is used.
    interface: ::1

    # Should additional section of secure message also be kept clean of
    # unsecure data. Useful to shield the users of this validator from
    # potential bogus data in the additional section. All unsigned data
    # in the additional section is removed from secure messages.
    val-clean-additional: yes

    # Turn permissive mode on to permit bogus messages. Thus, messages
    # for which security checks failed will be returned to clients,
    # instead of SERVFAIL. It still performs the security checks, which
    # result in interesting log files and possibly the AD bit in
    # replies if the message is found secure. The default is off.
    # NOTE: TURNING THIS ON DISABLES ALL DNSSEC SECURITY
    val-permissive-mode: no

    # Blocking Ad Servers
    local-zone: "doubleclick.net" redirect
    local-data: "doubleclick.net A 127.0.0.1"
    local-zone: "googlesyndication.com" redirect
    local-data: "googlesyndication.com A 127.0.0.1"
    local-zone: "googleadservices.com" redirect
    local-data: "googleadservices.com A 127.0.0.1"
    local-zone: "google-analytics.com" redirect
    local-data: "google-analytics.com A 127.0.0.1"
    local-zone: "ads.youtube.com" redirect
    local-data: "ads.youtube.com A 127.0.0.1"
    local-zone: "adserver.yahoo.com" redirect
    local-data: "adserver.yahoo.com A 127.0.0.1"
    local-zone: "ask.com" redirect
    local-data: "ask.com A 127.0.0.1"

    # Ignore the CD flag in incoming queries and refuse them bogus data.
    # Enable it if the only clients of unbound are legacy servers (w2008)
    # that set CD but cannot validate themselves.
    ignore-cd-flag: yes

    # Override the date for validation with a specific fixed date.
    # Do not set this unless you are debugging signature inception
    # and expiration. "" or "0" turns the feature off. -1 ignores date.
    val-override-date: "0"

    # The time to live for bogus data, rrsets and messages. This avoids
    # some of the revalidation, until the time interval expires. in secs.
    val-bogus-ttl: 0

    # deny-any: <yes or no>
    # If  yes,  deny  queries of type ANY with an empty response.  De-
    # fault is no.  If disabled, unbound responds with a short list of
    # resource records if some can be found in the cache and makes the
    # upstream type ANY query if there are none.
    deny-any: yes

    # enable to not answer version.server and version.bind queries.
    hide-version: yes

    # hide-trustanchor: <yes or no>
    # If enabled trustanchor.unbound queries are refused.
    hide-trustanchor: yes

    # Refuse id.server and hostname.bind queries
    hide-identity: yes

    # Report this identity rather than the hostname of the server.
    identity: "Server"

    # Prevent the unbound server from forking into the background as a daemon
    do-daemonize: no

    # Ignore very large queries.
    harden-large-queries: yes

    # Harden the referral path by performing additional queries for infrastructure data.
    # Validates the replies if trust anchors are configured and the zones are signed.
    # This enforces DNSSEC validation on nameserver NS sets and the nameserver addresses tha>
    # are encountered on the referral path to the answer.
    harden-referral-path: yes

    # Harden against algorithm downgrade when multiple algorithms are
    # advertised in the DS record.
    harden-algo-downgrade: yes

    # Ignore very small EDNS buffer sizes from queries.
    harden-short-bufsize: yes

    # Harden against queries that fall under dnssec-signed nxdomain names.
    harden-below-nxdomain: yes

    # Send minimum amount of information to upstream servers to enhance privacy
    qname-minimisation: yes

    # QNAME minimisation in strict mode. Do not fall-back to sending full
    # QNAME to potentially broken nameservers. A lot of domains will not be
    # resolvable when this option in enabled. This option only has effect when
    # qname-minimisation is enabled.
    qname-minimisation-strict: no

    # Do no insert authority/additional sections into response messages when
    # those sections are not required. This reduces response size
    # significantly, and may avoid TCP fallback for some responses. This may
    # cause a slight speedup
    minimal-responses: yes

    # Rotates RRSet order in response (the pseudo-random
    # number is taken from Ensure privacy of local IP
    # ranges the query ID, for speed and thread safety).
    # private-address: 192.168.1.0/16
    rrset-roundrobin: yes

    # Have unbound attempt to serve old responses from cache with a TTL of 0 in
    # the response without waiting for the actual resolution to finish. The
    # actual resolution answer ends up in the cache later on.
    serve-expired: yes

    # Limit serving of expired responses to configured seconds after expiration.
    # 0 disables the limit. This option only applies when serve-expired is enabled.
    # The default is 0.
    serve-expired-ttl: 0

    # Set the TTL of expired records to the serve-expired-ttl value after a
    # failed attempt to retrieve the record from upstream. This makes sure
    # that the expired records will be served as long as there are queries
    # for it. Default is "no".
    serve-expired-ttl-reset: no

    # Fetch the DNSKEYs earlier in the validation process, when a DS record is
    # encountered. This lowers the latency of requests at the expense of little
    # more CPU usage.
    prefetch-key: yes

    # Permit unbound to use this port number or port range for
    # making outgoing queries, using an outgoing interface.
    outgoing-port-permit: 32768-60999

    # Deny unbound the use this of port number or port range for
    # making outgoing queries, using an outgoing interface.
    # Use this to make sure unbound does not grab a UDP port that some
    # other server on this computer needs. The default is to avoid
    # IANA-assigned port numbers.
    # If multiple outgoing-port-permit and outgoing-port-avoid options
    # are present, they are processed in order.
    outgoing-port-avoid: 0-32767

    # Faster UDP with multithreading (only on Linux).
    so-reuseport: yes

    # Aggressive NSEC uses the DNSSEC NSEC chain to synthesize NXDO-
    # MAIN and other denials, using information from previous NXDO-
    # MAINs answers. Default is no. It helps to reduce the query
    # rate towards targets that get a very high nonexistent name
    # lookup rate.
    aggressive-nsec: yes

    # Specify how many times out of 1000 to pick from the set of fastest
    # servers.  0 turns the feature off.  A value of 900 would pick from
    # the fastest servers 90 percent of the time, and would perform nor-
    # mal exploration of random servers for the remaining  time.  When
    # prefetch is enabled (or serve-expired), such prefetches are not
    # sped up, because there is no one waiting for it, and it presents a
    # good moment to perform server exploration. The fast-server-num op-
    # tion can be used to specify the size of the fastest  servers  set.
    # The default for fast-server-permil is 0.
    fast-server-permil: 960

    # Set  the number of servers that should be used for fast server se-
    # lection. Only use the fastest specified number of servers with the
    # fast-server-permil  option, that turns this on or off. The default
    # is to use the fastest 3 servers.
    fast-server-num: 3

    # Minimize logs
    # Do not print one line per query to the log
    log-queries: no
    # Do not print one line per reply to the log
    log-replies: no
    # Do not print log lines that say why queries return SERVFAIL to clients
    log-servfail: no
    # Do not print log lines to inform about local zone actions
    log-local-actions: no
    # Prints the word ‘query’ and ‘reply’ with log-queries and log-replies.
    # This makes filtering logs easier. The default is off (for backwards
    # compatibility).
    log-tag-queryreply: no
    # Do not print log lines that say why queries return SERVFAIL to clients
    logfile: /dev/null

    # Log to syslog(3) if yes. The log facility LOG_DAEMON is used to
    # log to. If yes, it overrides the logfile.
    use-syslog: no

    # print statistics to the log (for every thread) every N seconds.
    # Set to "" or 0 to disable. Default is disabled.
    # Needs to be disabled for munin plugin
    statistics-interval: 0

    # enable cumulative statistics, without clearing them after printing.
    # Needs to be disabled for munin plugin
    statistics-cumulative: no

    # enable extended statistics (query types, answer codes, status)
    # printed from unbound-control.default off, because of speed.
    # Needs to be enabled for munin plugin
    extended-statistics: no

    #Disabling logging due to the use of pihole.
    log-time-ascii: no

    # if unbound is running service for the local host then it is useful
    # to perform lan-wide lookups to the upstream, and unblock the
    # long list of local-zones above. If this unbound is a dns server
    # for a network of computers, disabled is better and stops information
    # leakage of local lan information.
    unblock-lan-zones: no

    # If  yes,  localhost  is added to the do-not-query-address entries
    # , both IP6 ::1 and IP4 127.0.0.1/8. If no, then localhost can be
    # used to send queries to. Default is yes.
    do-not-query-localhost: yes

    # Extra delay for timeouted UDP ports before they are closed, in msec.
    # This prevents very delayed answer packets from the upstream (recursive)
    # servers from bouncing against closed ports and setting off all sort of
    # close-port counters, with eg. 1500 msec. When timeouts happen you need
    # extra sockets, it checks the ID and remote IP of packets, and unwanted
    # packets are added to the unwanted packet counter.
    delay-close: 0

    # Only give access to recursion clients from LAN IPs
    access-control: 127.0.0.1/32 allow
    access-control: 192.168.1.0/16 allow
    access-control: 172.16.0.0/12 allow
    access-control: 10.0.0.0/8 allow
    access-control: fc00::/7 allow
    access-control: ::1/128 allow

    # Number of slabs in the message cache. Slabs reduce lock con-
    # tention by threads. Must be set to a power of 2. Setting
    # (close) to the number of cpus is a reasonable guess.
    msg-cache-slabs: 12

    # does not depend on number of cores
    # Half of outgoing-range for queries
    # outgoing-range: 1073741824

    # Maximum UDP response size (not applied to TCP response).
    # Suggested values are 512 to 4096. Default is 4096. 65536 disables it.
    max-udp-size: 65534

    # Number of bytes size maximum to use for waiting stream buffers. Default is
    # 4 megabytes. A plain number is in bytes, append ‘k’, ‘m’ or ‘g’ for kilob>
    # megabytes or gigabytes (1024*1024 bytes in a megabyte). As TCP and TLS
    # streams queue up multiple results, the amount of memory used for these
    # buffers does not exceed this number, otherwise the responses are dropped.
    # This manages the total memory usage of the server (under heavy use), the
    # number of requests that can be queued up per connection is also limited,
    # with further requests waiting in TCP buffers.
    stream-wait-size: 999999999999999999999999999999

    # Maximum  number  of bytes used for all HTTP/2 query buffers com-
    # bined. These buffers contain (partial) DNS queries waiting  for
    # request stream completion. An RST_STREAM frame will be send to
    # streams exceeding this limit. Default is 4 megabytes. A plain
    # number is in bytes, append 'k', 'm' or 'g' for kilobytes,
    # megabytes or gigabytes (1024*1024 bytes in a megabyte).
    http-query-buffer-size: 99999999999999999999999999

    # Maximum number of bytes used for all HTTP/2 response buffers
    # combined. These buffers contain DNS responses waiting to be
    # written back to the clients. An RST_STREAM frame will be send
    # to streams exceeding this limit. Default is 4 megabytes. A plain
    # number is in bytes, append 'k', 'm' or 'g' for kilobytes,
    # megabytes or gigabytes (1024*1024 bytes in a megabyte).
    http-response-buffer-size: 99999999999999999999999999

    # Number of bytes size of the message cache. Default is 4
    # megabytes. A plain number is in bytes, append 'k', 'm' or 'g'
    # for kilobytes, megabytes or gigabytes (1024*1024 bytes in a
    # megabyte).
    msg-cache-size: 99999999999999999999999999

    # Set TCP_NODELAY socket option on sockets used to provide DNS-over-HTTPS service.
    # Ignored if the option is not available.
    http-nodelay: yes

    # This attempts to reduce latency by serving the outdated record before
    # updating it instead of the other way around. Alternative is to increase
    # cache-min-ttl to e.g. 3600.
    cache-min-ttl: 0

    # Maximum number of queries per second
    ratelimit: 0

    # Allow up to limit simultaneous TCP connections from the given
    # netblock. When at the limit, further connections are accepted
    # but closed immediately. This option is experimental at this
    # time.
    tcp-connection-limit: 192.168.1.0 2000

    # Number of bytes size of the message buffers. Default is 65552
    # bytes, enough for 64 Kb packets, the maximum DNS  message  size.
    # No message larger than this can be sent or received. Can be re-
    # duced to use less memory, but some requests for DNS  data, such
    # as for huge resource records, will result in a SERVFAIL reply to
    # the client.
    msg-buffer-size: 150994944

    # Number of bytes size of the key cache. Default is  4  megabytes.
    # A plain number is in bytes, append 'k', 'm' or 'g' for kilo-
    # bytes, megabytes or gigabytes (1024*1024 bytes in a megabyte).
    key-cache-size: 0m

    # Number of bytes size of the aggressive negative  cache.  Default
    # is  1  megabyte.  A plain number is in bytes, append 'k', 'm' or
    # 'g' for kilobytes, megabytes or gigabytes (1024*1024 bytes in  a
    # megabyte).
    neg-cache-size: 0m

    # Give  the  size of the data structure in which the current ongoing
    # rates are kept track in.  Default 4m.  In bytes  or  use  m(mega),
    # k(kilo),  g(giga).  The ratelimit structure is small, so this data
    # structure likely does not need to be large.
    ratelimit-size: 0m

    # Give the size of the data structure in which the  current  ongoing
    # rates  are  kept  track in.  Default 4m.  In bytes or use m(mega),
    # k(kilo), g(giga).  The ip ratelimit structure is  small,  so  this
    # data structure likely does not need to be large.
    ip-ratelimit-size: 0m

--------------------------------------------------------------------------

Unbound Fix Towards Querying to Pi-Hole:

You may also want to save your existing rules in case you want to restore them later.

iptables -A INPUT -p tcp --destination-port 443 -j REJECT --reject-with tcp-reset
iptables -A INPUT -p udp --destination-port 80 -j REJECT --reject-with icmp-port-unreachable
iptables -A INPUT -p udp --destination-port 443 -j REJECT --reject-with icmp-port-unreachable
ip6tables -A INPUT -p tcp --destination-port 443 -j REJECT --reject-with tcp-reset
ip6tables -A INPUT -p udp --destination-port 80 -j REJECT --reject-with icmp6-port-unreachable
ip6tables -A INPUT -p udp --destination-port 443 -j REJECT --reject-with icmp6-port-unreachable












